/**
 * ext - build.gradle에서 사용하는 전역변수를 설정
 * repositories - 각종 의존성 들을 어떤 원격 저장소에서 받을지를 설정
 * dependencies - 프로젝트 개발에 필요한 의존성들을 선언
 */
/*buildscript {
    ext {
        springbootVersion = '2.6.2'
    }
    repositories {
        mavenCentral()
        // jcenter() - 지원 종료 예정
    }
    dependencies {
        classpath('org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}')
    }
}

apply plugins: 'java-library'
apply plugins: 'eclipse'
apply plugins: 'org.springframework.boot'
apply plugins: 'io.spring.dependency-management' // spring boot의 의존성 들을 관리해 주는 플러그인

repositories {
    mavenCentral()
}

dependencies {
    // gradle 7.0 이후 compile, testCompile 삭제 후 implementation, api로 대체
    implementation('org.springframework.boot:spring-boot-starter-web')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
}*/

/************************************************************************************************
 * 아래와 같이 변경 가능
 ***********************************************************************************************/

plugins {
    id 'java'
    id 'java-library'
    id 'eclipse'
    id 'org.springframework.boot' version '2.6.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

group 'com.donghyeob'
version '1.0-SNAPSHOT'
sourceCompatibility = 11

repositories {
    mavenCentral()
}

dependencies {
    // implementation - 해당 의존성을 직접 의존하고 있는 의존성만 재빌드
    // compileOnly - 의존성을 컴파일시에만 포함
    // annotationProcessor - 컴파일러에게 어노테이션 확인할 때 lombok도 봐달라고 요청
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.boot:spring-boot-starter-mustache')
    implementation('org.springframework.boot:spring-boot-starter-oauth2-client')
    implementation('org.springframework.boot:spring-boot-starter-jdbc')
    implementation('org.springframework.session:spring-session-jdbc')
    implementation('org.springdoc:springdoc-openapi-ui:1.6.6')
    runtimeOnly('org.mariadb.jdbc:mariadb-java-client')
    // h2 - 인메모리 관계형 데이터베이스로서 의존성만으로 관리 가능
    // implementation('com.h2database:h2')
    // gradle 5.x 이상 lombok 설정방법
    compileOnly('org.projectlombok:lombok')
    annotationProcessor('org.projectlombok:lombok')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('org.assertj:assertj-core')
    testImplementation("org.springframework.security:spring-security-test")
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes('Main-Class': 'com.donghyeob.springboot.Application')
    }
}